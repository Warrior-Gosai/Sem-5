CREATE TABLE EMPP(
EID NUMBER(5) CONSTRAINTS PKEID PRIMARY KEY,
ENAME VARCHAR2(20) NOT NULL,
AGE NUMBER(3) CONSTRAINTS CKAGE CHECK(AGE>=18 AND AGE<=30),
SAL NUMBER(6) CONSTRAINTS CKSAL CHECK(SAL>=25000)
);

CREATE TABLE DEPTT(
DID NUMBER(5) CONSTRAINTS PKDID PRIMARY KEY ,
DNAME VARCHAR2(20),
BUDGET NUMBER(8),
MANAGERID NUMBER(3)
);
DROP TABLE EMPP;
DROP TABLE DEPTT;
CREATE TABLE WORKS(
 FOREIGN KEY (EID)REFERENCES DEPARTMENT(EMPP),
 FOREIGN KEY (DID)REFERENCES DEPARTMENT(DEPTT),
PCT_TIME NUMBER(5)
);



/*2018-1 SET-1 SOLUTION*/
CREATE TABLE DEPARTMENT(
DEPT_NO NUMBER(3) CONSTRAINTS PKDNO PRIMARY KEY,
DEPT_NAME CHARACTER(20) NOT NULL,
DEPT_LOCATION CHARACTER(30) NOT NULL
);

CREATE TABLE EMPLOYEE(
EMP_NO NUMBER(5) CONSTRAINTS PKENO PRIMARY KEY,
EMP_NAME CHARACTER(5) NOT NULL,
DOJ DATE,
DOB DATE,
SAL NUMBER(10,2),
DEPT_NO NUMBER(3),
FOREIGN KEY (DEPT_NO)REFERENCES DEPARTMENT(DEPT_NO)
);

Q-1 SELECT * FROM DEPARTMENT WHERE DEPT_NAME='SALES';

Q-2 UPDATE  EMPLOYEE  SET SAL=SAL+500 WHERE DEPT_NO=20;

Q-3 SELECT * FROM EMPLOYEE  WHERE  DOJ='1-JAN-2005';

Q-4 
CREATE TABLE MANAGER(
DEPT_NO NUMBER(3),
DEPT_NAME CHARACTER(20) ,
DEPT_LOCATION CHARACTER(30),
EMP_ID NUMBER(5),
EMP_NAME CHARACTER(5),
DOJ DATE,
DOB DATE,
SAL NUMBER(10,2)
);
CREATE VIEW  MYVIEW AS SELECT * FROM MANAGER;

Q-5 SELECT * FROM DEPARTMENT WHERE DEPT_LOCATION ='CHITRA';

Q-6 SELECT MAX(SAL),MIN(SAL)FROM EMPLOYEE;

INSERT INTO DEPARTMENT VALUES(&DEPT_NO,'&DEPT_NAME','&DEPT_LOCATION');
INSERT INTO EMPLOYEE VALUES (&EMP_NO,'&EMP_NAME','&DOJ','&DOB',&SAL,&DEPT_NO);


/*2018-1 SET-2 SOLUTION*/

CREATE TABLE STUDENT_RESULT(
RNO NUMBER(5) CONSTRAINTS PKRNO PRIMARY KEY,
SNAME VARCHAR2(30) CONSTRAINTS CKN CHECK(SNAME=UPPER(SNAME)),
BDATE DATE
);
 
Q-1 ALTER TABLE STUDENT_RESULT ADD(
TOTAL NUMBER(5),
PER NUMBER(6,2),
GRADE VARCHAR2(3)
);

INSERT INTO STUDENT_RESULT VALUES(&RNO,'&SNAME','&BDATE',&TOTAL,&PER,'&GRADE');

Q-2 SELECT * FROM STUDENT_RESULT ORDER BY PER DESC;

Q-3 

Q-4 SELECT * FROM STUDENT_RESULT WHERE TOTAL BETWEEN 150 AND 190 AND PER<=60;

Q-5 DELETE FROM STUDENT_RESULT WHERE GRADE ='A' OR GRADE ='B';

Q-6 SELECT *  FROM STUDENT_RESULT WHERE BDATE BETWEEN '1-JAN-1991' AND '1-JAN-1992';

Q-7 CREATE TABLE NEWSTUDENT_RESULT AS SELECT * FROM STUDENT_RESULT;
	->INSERT INTO NEWSTUDENT_RESULT SELECT * FROM STUDENT_RESULT;

Q-8 DELETE FROM NEWSTUDENT_RESULT WHERE PER<40;

Q-9 DELETE FROM NEWSTUDENT_RESULT  WHERE SNAME LIKE'S%';

/*2019-1 SOLUTION*/

CREATE TABLE EMPP(
EMPNO NUMBER (5) CONSTRAINTS PKENO PRIMARY KEY,
NAME VARCHAR2 (10) NOT NULL,
DOB DATE CONSTRAINTS CKD CHECK(DOB>'1-JAN-1970'),
CITY VARCHAR2(10)
);

CREATE TABLE COMP(
COMPNO NUMBER (5) CONSTRAINTS PKCNO PRIMARY KEY,
CNAME VARCHAR2 (10) NOT NULL,
CITY VARCHAR2(10));

CREATE TABLE WORK(
SAL NUMBER (5),
EMPNO NUMBER (5),
COMPNO NUMBER (5),
FOREIGN KEY FKE (EMPNO) REFERENCES EMPP(EMPNO),
FOREIGN KEY FKC (COMPNO) REFERENCES COMP(COMPNO)

);

Q-1 

Q-2 SELECT MAX(SAL) FROM WORKS

SELECT ENAME FROM EMP 


/*OCT-NOV-2019 SET-10*/
CREATE TABLE MOVIE(
ID NUMBER (4) CONSTRAINTS PKID PRIMARY KEY,
TITLE VARCHAR2(20) NOT NULL,
YEAR NUMBER(4)CONSTRAINTS CKY CHECK(YEAR>2000) ,
LANUAGE VARCHAR2(10) NOT NULL
);

CREATE TABLE ACTOR(
ID NUMBER(4) ,
ACT_ID NUMBER(4)CONSTRAINTS PKAID PRIMARY KEY,
ACT_NAME VARCHAR2(10) NOT NULL,
ROLE VARCHAR2(10)NOT NULL,
FOREIGN KEY(ID) REFERENCES MOVIE (ID)
);
INSERT INTO MOVIE VALUES(&ID ,'&TITLE',&YEAR,'&LANUAGE' );
INSERT INTO ACTOR VALUES(&ID,&ACT_ID,'&ACT_NAME','&ROLE');
Q-1 SELECT TITLE ,YEAR FROM MOVIE;

Q-2 SELECT * FROM MOVIE WHERE YEAR=2001 OR YEAR=2003;

Q-3 SELECT * FROM MOVIE ORDER BY  TITLE DESC;

Q-4 SELECT * FROM ACTOR;

Q-5 SELECT * FROM ACTOR WHERE ID=(SELECT ID FROM MOVIE WHERE TITLE LIKE 'S%');

Q-6 DESC MOVIE;DESC ACTOR;

Q-7 SELECT * FROM MOVIE  WHERE LANUAGE=HINDI OR LANUAGE=ENGLISH;

Q-8 SELECT * FROM  ACTOR ORDER BY ROLE DESC;

Q-9 ALTER TABLE MOVIE ADD (MONTH NUMBER (2));

/*OCT-NOV-2019 SET-10*/


























